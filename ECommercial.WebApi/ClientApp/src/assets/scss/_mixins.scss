@import "./partials/tools/unitconversion";

/* border and border shadow */
@mixin border-inside($outdent,$border-size,$radius,$color,$opacity) {
  content: " ";
  position: absolute;
  pointer-events: none;
  z-index: 1;
  top: $outdent;
  left: $outdent;
  right: $outdent;
  bottom: $outdent;
  border: $border-size solid $color;
  border-radius: $radius;
  opacity: $opacity;
}
@mixin border-shadow($outdent,$border-size,$radius,$color,$opacity) {
  &:before {
    @include border-inside($outdent,$border-size,$radius,$color,$opacity);
  }
}

@mixin border($outdent,$border-size,$radius,$color,$opacity) {
  &:after {
    content: " ";
    @include border-inside($outdent,$border-size,$radius,$color,$opacity);
  }
}

/*Triangle-shape*/
@mixin triangle($direction, $size, $color) {
  width: 0;
  height: 0;
  @if $direction == 'up' {
      border-left: em($size) solid transparent;
      border-right: em($size) solid transparent;
      border-bottom: em($size) solid $color;
  }
  @else if $direction == 'down' {
      border-left: em($size) solid transparent;
      border-right: em($size) solid transparent;
      border-top: $size solid $color;
  }
  @else if $direction == 'right' {
      border-top: em($size) solid transparent;
      border-bottom: em($size) solid transparent;
      border-left: em($size) solid $color;
  }
  @else if $direction == 'left' {
      border-top: em($size) solid transparent;
      border-bottom: em($size) solid transparent;
      border-right: em($size) solid $color;
  }
}



